import os.path
#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Sat Apr 10 00:13:40 2010

# example of wx.TreeCtrl()
import os
import sys

import traceback
import shutil
import re

from PIL import Image

def isText (buff, buffLen):
	non_text = 0
	for i in range(buffLen):
		a = ord(buff[i])
		if (a < 8) or (a > 13 and a < 32) or (a > 126):
			non_text += 1
	return non_text


def moveFiles(sourcePath):

	isImgRE      = re.compile(r"(\.jpg|\.jpeg|\.gif|\.png|\.tiff|\.bmp)$", re.IGNORECASE)
	isHtmlRE     = re.compile(r"(\.htm|\.html|\.php|\.js|.css)$", re.IGNORECASE)
	alreadyNamed = re.compile(r"\d\d\d\d\d\d\d.*?$", re.IGNORECASE)

	print(sourcePath)
	if os.access(sourcePath, os.W_OK):
		wh = os.walk(sourcePath)
		walkedFiles = 0
		print("Walking")
		for root, dirs, files in wh:
			#print root, dir#, files
			for file in files:

				walkedFiles += 1
				if walkedFiles % 100 == 0:
					print("Walked %s files" % walkedFiles)

				originPath =  os.path.join(root, file)

				if isImgRE.search(file):
					#print "It's an Image", originPath
					fr = alreadyNamed.search(file)
					print(fr, file)
					if not fr:
						try:
							imPt = open(originPath, "rb")
							im = Image.open(imPt)
							im.load()
							imPt.close()
							pixes = im.size[0]*im.size[1]
							imgName = "%06d - %s" % (pixes, file)
							dstPath =  os.path.join(sourcePath, imgName)
							print("renaming as - ", imgName)

							os.rename(originPath, dstPath)

						except:
							traceback.print_exc(file=sys.stdout)
							try:
								imPt.close()
							except:
								pass
							imgName = "%06d Broken- %s" % (0, file)
							dstPath =  os.path.join(sourcePath, imgName)
							print("renaming as - ", imgName)

					#elif isHtmlRE.search(file):
					#	print "HTML File: %s" % originPath
					#	os.remove(originPath)

				else:# len(file) > 20:



					fsize = os.path.getsize(originPath)
					if fsize < 100:
						print("Tiny File - ", originPath)

						print(originPath)
						os.remove(originPath)
					else:
						pass
						#print "Size %s File - %s" % (fsize, originPath)
					'''
					elif fsize < 500000:
						fp = open(originPath, "r")
						buff = fp.read(4096)
						buffLen = len(buff)
						fp.close()

						if buffLen > 0:
							dstPath =  os.path.join(targetPath, file)
							non_text = isText(buff, buffLen)
							print file,

							if non_text > 0:
								textPer = float(non_text) / float(buffLen)
								if textPer < 0.1:
									print originPath
									print "is Probably Text"

									print (" - buffLen %s - non_text %s - nonTextPercentage %s - Valid Text File" % (buffLen, non_text,textPer))
									#shutil.move(originPath, dstPath), originPath
								else:
									print (" - buffLen %s - non_text %s - nonTextPercentage %s - Valid Binary File" % (buffLen, non_text,textPer))

							else:
								print "Completely Text", file
								#shutil.move(originPath, dstPath), originPath
						else:
							print "Error?"



					elif fsize == 0:
						print "Zero Byte File: ", file
						os.remove(originPath)
					else:
						print "Skipping... ",fsize, file
					'''


					#
	else:
		print("Invalid Directory!")

if __name__ == "__main__":
	print(len(sys.argv))
	if len(sys.argv) > 1:
		sourcePath = sys.argv[1]
		moveFiles(sourcePath)
	else:
		print("Needs an arguement")
		sys.exit(0)
